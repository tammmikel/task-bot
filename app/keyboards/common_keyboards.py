"""
–û–±—â–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
"""
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton


def get_confirmation_keyboard(confirm_callback: str, confirm_text: str = "‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å") -> InlineKeyboardMarkup:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è
    
    Args:
        confirm_callback: Callback –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
        confirm_text: –¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
        
    Returns:
        –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    """
    keyboard = [
        [InlineKeyboardButton(text=confirm_text, callback_data=confirm_callback)],
        [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="cancel")]
    ]
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_cancel_keyboard() -> InlineKeyboardMarkup:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π –æ—Ç–º–µ–Ω—ã
    
    Returns:
        –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π –æ—Ç–º–µ–Ω—ã
    """
    keyboard = [
        [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="cancel")]
    ]
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_yes_no_keyboard(yes_callback: str, no_callback: str = "cancel") -> InlineKeyboardMarkup:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –î–∞/–ù–µ—Ç
    
    Args:
        yes_callback: Callback –¥–ª—è "–î–∞"
        no_callback: Callback –¥–ª—è "–ù–µ—Ç"
        
    Returns:
        –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –î–∞/–ù–µ—Ç
    """
    keyboard = [
        [
            InlineKeyboardButton(text="‚úÖ –î–∞", callback_data=yes_callback),
            InlineKeyboardButton(text="‚ùå –ù–µ—Ç", callback_data=no_callback)
        ]
    ]
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_pagination_keyboard(items: list, page: int, items_per_page: int, callback_prefix: str) -> InlineKeyboardMarkup:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
    
    Args:
        items: –°–ø–∏—Å–æ–∫ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        page: –¢–µ–∫—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ (–Ω–∞—á–∏–Ω–∞—è —Å 0)
        items_per_page: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
        callback_prefix: –ü—Ä–µ—Ñ–∏–∫—Å –¥–ª—è callback –¥–∞–Ω–Ω—ã—Ö
        
    Returns:
        –ö–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
    """
    keyboard = []
    
    # –í—ã—á–∏—Å–ª—è–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü
    total_pages = (len(items) + items_per_page - 1) // items_per_page
    
    # –î–æ–±–∞–≤–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    start_idx = page * items_per_page
    end_idx = min(start_idx + items_per_page, len(items))
    
    for i in range(start_idx, end_idx):
        item = items[i]
        # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ —É —ç–ª–µ–º–µ–Ω—Ç–∞ –µ—Å—Ç—å –∞—Ç—Ä–∏–±—É—Ç—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        if hasattr(item, 'name'):
            text = item.name
        elif hasattr(item, 'title'):
            text = item.title
        else:
            text = str(item)
        
        # –û–±—Ä–µ–∑–∞–µ–º –¥–ª–∏–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
        if len(text) > 30:
            text = text[:27] + "..."
        
        # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ —É —ç–ª–µ–º–µ–Ω—Ç–∞ –µ—Å—Ç—å ID
        item_id = getattr(item, 'id', getattr(item, 'company_id', getattr(item, 'task_id', i)))
        
        keyboard.append([
            InlineKeyboardButton(
                text=text,
                callback_data=f"{callback_prefix}:{item_id}"
            )
        ])
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    if total_pages > 1:
        nav_buttons = []
        
        if page > 0:
            nav_buttons.append(
                InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data=f"page:{callback_prefix}:{page-1}")
            )
        
        nav_buttons.append(
            InlineKeyboardButton(text=f"{page + 1}/{total_pages}", callback_data="noop")
        )
        
        if page < total_pages - 1:
            nav_buttons.append(
                InlineKeyboardButton(text="–í–ø–µ—Ä–µ–¥ ‚ñ∂Ô∏è", callback_data=f"page:{callback_prefix}:{page+1}")
            )
        
        keyboard.append(nav_buttons)
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_back_keyboard(callback_data: str, text: str = "üîô –ù–∞–∑–∞–¥") -> InlineKeyboardMarkup:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥"
    
    Args:
        callback_data: Callback –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
        text: –¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏
        
    Returns:
        –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥"
    """
    keyboard = [
        [InlineKeyboardButton(text=text, callback_data=callback_data)]
    ]
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)
